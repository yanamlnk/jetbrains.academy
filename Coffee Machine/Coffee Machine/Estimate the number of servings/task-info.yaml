type: edu
custom_name: stage3
files:
- name: src/machine/CoffeeMachine.java
  visible: true
  text: |
    package machine;

    public class CoffeeMachine {
        public static void main(String[] args) {
            System.out.println("Starting to make a coffee");
            System.out.println("Grinding coffee beans");
            System.out.println("Boiling water");
            System.out.println("Mixing boiled water with crushed coffee beans");
            System.out.println("Pouring coffee into the cup");
            System.out.println("Pouring some milk into the cup");
            System.out.println("Coffee is ready!");
        }
    }
  learner_created: false
- name: test/CoffeeMachineTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;

    import java.util.List;


    class TestClue {
        boolean cond;
        int num;
        boolean showTests;
        TestClue(boolean c, int n, boolean showTests) {
            cond = c;
            num = n;
            this.showTests = showTests;
        }
    }

    public class CoffeeMachineTest extends StageTest<TestClue> {

        @Override
        public List<TestCase<TestClue>> generate() {
            return List.of(
                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 0, true))
                    .setInput("300\n65\n111\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 2, true))
                    .setInput("600\n153\n100\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 2, true))
                    .setInput("1400\n150\n100\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 2, true))
                    .setInput("1400\n1500\n45\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(false, 2, true))
                    .setInput("599\n250\n200\n10"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 867, true))
                    .setInput( "345640\n43423\n23234\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(false, 1548, true))
                    .setInput("345640\n434230\n23234\n19246"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(false, 172, true))
                    .setInput( "34564\n43423\n23234\n19246"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 0, false))
                    .setInput("399\n112\n111\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 3, false))
                    .setInput("2400\n249\n100\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 1, false))
                    .setInput("1400\n1500\n44\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(false, 2, false))
                    .setInput("500\n250\n200\n10"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 171, false))
                    .setInput("34564\n43423\n23234\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 1547, false))
                    .setInput("345640\n434230\n23234\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(false, 868, false))
                    .setInput("345640\n43423\n23234\n19246")

            );
        }

        @Override
        public CheckResult check(String reply, TestClue clue) {
            String[] lines = reply.trim().split(":");

            if (lines.length <= 1) {
                return CheckResult.wrong("Looks like you didn't print anything!");
            }

            String userOutput = lines[lines.length - 1].trim();
            String loweredOutput = userOutput.toLowerCase();
            boolean ans = clue.cond;
            int amount = clue.num;
            if (ans) {
                if (amount > 0) {
                    boolean isCorrect =
                        loweredOutput.contains(Integer.toString(amount))
                         && loweredOutput.contains("yes");

                    if (isCorrect) {
                        return CheckResult.correct();
                    } else {

                        String rightOutput =
                            "Yes, I can make that amount of coffee" +
                                " (and even " + amount + " more than that)";

                        if (clue.showTests) {
                            return new CheckResult(false,
                                "Your output:\n" +
                                    userOutput +
                                    "\nRight output:\n" +
                                    rightOutput);
                        } else {
                            return CheckResult.wrong("");
                        }
                    }
                }

                String rightOutput =
                    "Yes, I can make that amount of coffee";

                if (loweredOutput.equals(rightOutput.toLowerCase())) {
                    return CheckResult.correct();
                } else {
                    if (clue.showTests) {
                        return new CheckResult(false,
                            "Your output:\n" +
                                userOutput +
                                "\nRight output:\n" +
                                rightOutput);
                    } else {
                        return CheckResult.wrong("");
                    }
                }

            } else {
                boolean cond1 = loweredOutput.contains("no");
                boolean cond2 = loweredOutput.contains(Integer.toString(amount));

                if (cond1 && cond2) {
                    return CheckResult.correct();
                } else {

                    String rightOutput = "No, I can make only " +
                        amount +" cup(s) of coffee";

                    if (clue.showTests) {
                        return new CheckResult(false,
                            "Your output:\n" +
                            userOutput +
                            "\nRight output:\n" +
                            rightOutput);
                    } else {
                        return CheckResult.wrong("");
                    }
                }
            }
        }
    }
  learner_created: false
- name: src/machine/Main.class
  visible: true
  text: yv66vgAAADwAPQoAAgADBwAEDAAFAAYBABBqYXZhL2xhbmcvT2JqZWN0AQAGPGluaXQ+AQADKClWCQAIAAkHAAoMAAsADAEAEGphdmEvbGFuZy9TeXN0ZW0BAANvdXQBABVMamF2YS9pby9QcmludFN0cmVhbTsIAA4BACxXcml0ZSBob3cgbWFueSBjdXBzIG9mIGNvZmZlZSB5b3Ugd2lsbCBuZWVkOgoAEAARBwASDAATABQBABNqYXZhL2lvL1ByaW50U3RyZWFtAQAFcHJpbnQBABUoTGphdmEvbGFuZy9TdHJpbmc7KVYHABYBABFqYXZhL3V0aWwvU2Nhbm5lcgkACAAYDAAZABoBAAJpbgEAFUxqYXZhL2lvL0lucHV0U3RyZWFtOwoAFQAcDAAFAB0BABgoTGphdmEvaW8vSW5wdXRTdHJlYW07KVYKABUAHwwAIAAhAQAHbmV4dEludAEAAygpSRIAAAAjDAAkACUBABdtYWtlQ29uY2F0V2l0aENvbnN0YW50cwEAGChJSUlJKUxqYXZhL2xhbmcvU3RyaW5nOwcAJwEAFW1hY2hpbmUvQ29mZmVlTWFjaGluZQEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBAARtYWluAQAWKFtMamF2YS9sYW5nL1N0cmluZzspVgEAClNvdXJjZUZpbGUBABJDb2ZmZWVNYWNoaW5lLmphdmEBABBCb290c3RyYXBNZXRob2RzDwYAMAoAMQAyBwAzDAAkADQBACRqYXZhL2xhbmcvaW52b2tlL1N0cmluZ0NvbmNhdEZhY3RvcnkBAJgoTGphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcyRMb29rdXA7TGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTtMamF2YS9sYW5nL1N0cmluZztbTGphdmEvbGFuZy9PYmplY3Q7KUxqYXZhL2xhbmcvaW52b2tlL0NhbGxTaXRlOwgANgEAUkZvciABIGN1cHMgb2YgY29mZmVlIHlvdSB3aWxsIG5lZWQ6CgEgbWwgb2Ygd2F0ZXIKASBtbCBvZiBtaWxrCgEgZyBvZiBjb2ZmZWUgYmVhbnMBAAxJbm5lckNsYXNzZXMHADkBACVqYXZhL2xhbmcvaW52b2tlL01ldGhvZEhhbmRsZXMkTG9va3VwBwA7AQAeamF2YS9sYW5nL2ludm9rZS9NZXRob2RIYW5kbGVzAQAGTG9va3VwACEAJgACAAAAAAACAAEABQAGAAEAKAAAAB0AAQABAAAABSq3AAGxAAAAAQApAAAABgABAAAABQAJACoAKwABACgAAABwAAUABgAAADyyAAcSDbYAD7sAFVmyABe3ABtMK7YAHj0cEQDIaD4cEDJoNgQcEA9oNgWyAAccHRUEFQW6ACIAALYAD7EAAAABACkAAAAiAAgAAAAIAAgACgATAAsAGAANAB4ADgAkAA8AKgARADsAFAADACwAAAACAC0ALgAAAAgAAQAvAAEANQA3AAAACgABADgAOgA8ABk=
  learner_created: true
feedback_link: https://hyperskill.org/projects/33/stages/177/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: Thu, 08 Jul 2021 19:31:38 UTC
record: 3
